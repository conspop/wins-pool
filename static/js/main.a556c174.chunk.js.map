{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["picks","name","App","state","standings","avgPlayerWins","avgTeamWins","axios","get","then","res","organizeStandings","data","standingsData","teams","league","standard","winsByTeam","forEach","team","teamSitesOnly","teamCode","win","this","assignToPlayers","picksAndWins","totalWins","player","playerObj","pick","idx","total","parseInt","push","sort","a","b","setState","playerList","map","details","Component","PlayerItem","props","pick1","pick2","pick3","className","style","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a556c174.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react'\nimport axios from 'axios'\n\nconst picks = [\n  {\n    name: 'Geoff',\n    picks: ['bucks', 'grizzlies', 'hornets']\n  },\n  {\n    name: 'Cheeks',\n    picks: ['lakers', 'pacers', 'knicks']\n  },\n  {\n    name: 'Jer',\n    picks: ['clippers', 'rockets', 'thunder']\n  },\n  {\n    name: 'Pete',\n    picks: ['nuggets', 'timberwolves', 'bulls']\n  },\n  {\n    name: 'Seb',\n    picks: ['heat', 'warriors', 'pistons']\n  },\n  {\n    name: 'Schwab',\n    picks: ['celtics', 'hawks', 'magic']\n  },\n  {\n    name: 'Greg',\n    picks: ['raptors', 'jazz', 'cavaliers']\n  },\n  {\n    name: 'Matty D',\n    picks: ['mavericks', 'wizards', 'pelicans']\n  },\n  {\n    name: 'Briin',\n    picks: ['nets', 'blazers', 'spurs']\n  },\n  {\n    name: 'Neil',\n    picks: ['sixers', 'suns', 'kings']\n  },\n] \n\nclass App extends Component {\n  state = {\n    standings: '',\n    avgPlayerWins: '',\n    avgTeamWins: ''\n  }\n  \n  componentDidMount() {\n    axios.get('http://data.nba.net/prod/v1/current/standings_all_no_sort_keys.json')\n      .then(res => {\n        this.organizeStandings(res.data);\n      })\n  }\n\n  organizeStandings(standingsData) {\n    const {teams} = standingsData.league.standard\n    const winsByTeam = {}\n    teams.forEach(team => {\n      winsByTeam[team.teamSitesOnly.teamCode] = team.win\n    })\n    this.assignToPlayers(winsByTeam)\n  }\n\n  assignToPlayers(winsByTeam) {\n    const picksAndWins = []\n    let totalWins = 0\n    picks.forEach(player => {\n      const playerObj = {}\n      playerObj.total = 0\n      playerObj.name = player.name\n      player.picks.forEach((pick, idx) => {\n        playerObj['pick' + (idx + 1)] = [pick,winsByTeam[pick]]\n        playerObj.total += parseInt(winsByTeam[pick])\n        totalWins += parseInt(winsByTeam[pick])\n      })\n      picksAndWins.push(playerObj)\n    })\n    const standings = picksAndWins.sort((a, b) => {\n      return b.total - a.total\n    })\n    this.setState({\n      standings,\n      avgPlayerWins: (totalWins / 10),\n      avgTeamWins: (totalWins / 30)\n    })\n  }\n  \n  render() {\n    const {standings, avgTeamWins, avgPlayerWins} = this.state\n    let playerList = []\n    if (standings) {\n      playerList = standings.map(player => {\n        return (\n          <PlayerItem \n            details={player} \n            avgTeamWins={avgTeamWins} \n            avgPlayerWins={avgPlayerWins}\n            key={player.name}\n          />\n        ) \n      })\n    }\n    return (\n      <div>\n        {playerList}\n      </div>\n    )\n  }\n}\n\nclass PlayerItem extends Component {\n  render() {\n    const {avgPlayerWins, avgTeamWins, details} = this.props\n    const {total, pick1, pick2, pick3, name} = details\n    return (  \n      <div className='player-item'>\n        <div \n          className='total'\n          style={{fontSize: `${total / avgPlayerWins * 2 + .5}rem`}}\n        >\n          <div>{name}</div>\n          <div>{total}</div>\n        </div>\n        <div \n          className='pick1'\n          style={{fontSize: `${pick1[1] / avgTeamWins / 2 + .5}rem`}}\n        >\n          <div>{pick1[0]}</div>\n          <div>{pick1[1]}</div>\n        </div>\n        <div \n          className='pick2'\n          style={{fontSize: `${pick2[1] / avgTeamWins / 2 + .5}rem`}}\n        >\n          <div>{pick2[0]}</div>\n          <div>{pick2[1]}</div>\n        </div>\n        <div \n          className='pick3'\n          style={{fontSize: `${pick3[1] / avgTeamWins / 2 + .5}rem`}}\n        >\n          <div>{pick3[0]}</div>\n          <div>{pick3[1]}</div>\n        </div>\n      </div>  \n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}